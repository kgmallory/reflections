What happens when you initialize a repository? Why do you need to do it?

	It creates a .git directory and the files that keep track of the repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to collect the files you intend to commit in an organized way before you actually perform the commit.  That way, all files, and the commit descritpion and other information will all be processed simultaneously.

How can you use the staging area to make sure you have one commit per logical
change?

	Only add files to the staging area if they are part of one logcial change.  This can be confirmed by performing a git diff to compare working directory and staging area, or a git diff --staged to compare the staging area and the head of the commits.  All differences should relate to one change.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Useful if you are exploring different options for solving the same problem, or if there will be more than one final version, with different difficulty levels or languages.  Or, maybe there will only be one final version, but the different features and configurations are being designed in isolation from each other, possibly by different people.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
