How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Using diff to find differences means I don't need to look at every line of
	two long files.  Since we committed frequently, typos and other errors were 
	highlighted in one relatively short diff file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	You would remember what you did before and maybe why you changed it so you
	wouldn't go back and make a change to something you had already decided was
	not wanted.  You could review your good ideas/bad ideas in hindsight.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	Commits can take place at logical points in development, not too big, not
	too small, meaning that the commit description can be short and simple.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	Applications that use multiple files together (like coding) benefit from the
	repository system, whereas memos and other word processing where all
	information is in one file, are best done in an application that is meant to
	work on only one file at a time so commits or saves, need only work on one
	file

How can you use the commands git log and git diff to view the history of files?

	You can find where certain ideas were implemented and the actual changes to
	the files.  You can see what changed and when it changed, and, if you made a
	good comment, why it changed.

How might using version control make you more confident to make changes that
could break something?

	If something breaks, is easy to back up until we find where the bug was
	introduced, so if we make a change and something breaks, it's easy to fix,
	just go back and find the bug

Now that you have your workspace set up, what do you want to try using Git for?

	Play with open source files, itâ€™s easier to learn languages by playing with
	existing stuff than starting from scratch.
